[0m[[0m[0mdebug[0m] [0m[0mInvalidating /Users/mimo/.ivy2/cache/org.awaitility/awaitility/jars/awaitility-2.0.0.jar: could not find class org.awaitility.core.ConditionFactory on the classpath.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /Users/mimo/.ivy2/cache/com.typesafe.play/play-test_2.12/jars/play-test_2.12-2.6.7.jar: could not find class play.test.WithApplication on the classpath.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /Users/mimo/.ivy2/cache/com.typesafe.play/twirl-api_2.12/jars/twirl-api_2.12-1.3.12.jar: could not find class play.twirl.api.Content on the classpath.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /Users/mimo/.ivy2/cache/com.typesafe.play/play_2.12/jars/play_2.12-2.6.7.jar: could not find class play.Application on the classpath.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /Users/mimo/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.6.jar: could not find class akka.actor.ActorSystem on the classpath.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /Users/mimo/.ivy2/cache/org.assertj/assertj-core/bundles/assertj-core-3.6.2.jar: could not find class org.assertj.core.api.Assertions on the classpath.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating /Users/mimo/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.8.10.jar: could not find class com.fasterxml.jackson.databind.ObjectMapper on the classpath.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe models.Receta has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(setTitulo,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(setIngredientes,[Default]), UsedName(setId,[Default]), UsedName(_ebean_getField,[Default]), UsedName(getPasos,[Default]), UsedName(findByTituloAndAutor,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(getTipo,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(Receta,[Default]), UsedName(notify,[Default]), UsedName(getId,[Default]), UsedName(findByCocineros,[Default]), UsedName(findByTitulo,[Default]), UsedName(save,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(getIngredientes,[Default]), UsedName(markAsDirty,[Default]), UsedName(setTags,[Default]), UsedName(_ebean_props,[Default]), UsedName(getR_cocinero,[Default]), UsedName(checkAndCreate,[Default]), UsedName(equals,[Default]), UsedName(getTitulo,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(findAll,[Default]), UsedName(setTipo,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(toJson,[Default]), UsedName(setR_cocinero,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(findByTituloAprox,[Default]), UsedName(r_cocinero,[Default]), UsedName(ingredientes,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(findByIngredientes,[Default]), UsedName(pasos,[Default]), UsedName(findByTags,[Default]), UsedName(findByCodineroPaged,[Default]), UsedName(quitarIngrediente,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(findByCocinero,[Default]), UsedName(insert,[Default]), UsedName(setPasos,[Default]), UsedName(tags,[Default]), UsedName(find,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(delete,[Default]), UsedName(numRecetas,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(getTags,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(asignarIngrediente,[Default]), UsedName(findById,[Default]), UsedName(flush,[Default]), UsedName(findByTitulos,[Default]), UsedName(models;Receta;init;,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) models.Receta: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) models.Receta.[0m
[0m[[0m[0mdebug[0m] [0m[0mName hashing optimization doesn't apply to non-Scala dependency: FunctionalTest[0m
[0m[[0m[0mdebug[0m] [0m[0mThe controllers.AsyncController has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(CONTENT_RANGE,[Default]), UsedName(notifyAll,[Default]), UsedName(CONTENT_LOCATION,[Default]), UsedName(CONNECTION,[Default]), UsedName(AGE,[Default]), UsedName(CACHE_CONTROL,[Default]), UsedName(TOO_MANY_REQUESTS,[Default]), UsedName(EXPIRES,[Default]), UsedName(ACCEPT_CHARSET,[Default]), UsedName(SET_COOKIE,[Default]), UsedName(SEE_OTHER,[Default]), UsedName(ACCEPT_RANGES,[Default]), UsedName(PRAGMA,[Default]), UsedName(permanentRedirect,[Default]), UsedName(GONE,[Default]), UsedName(PARTIAL_CONTENT,[Default]), UsedName(CONTENT_LANGUAGE,[Default]), UsedName(MULTI_STATUS,[Default]), UsedName(TRANSFER_ENCODING,[Default]), UsedName(TEMPORARY_REDIRECT,[Default]), UsedName(PROXY_AUTHENTICATE,[Default]), UsedName(notify,[Default]), UsedName(ACCESS_CONTROL_REQUEST_METHOD,[Default]), UsedName(CONTINUE,[Default]), UsedName(INSUFFICIENT_STORAGE,[Default]), UsedName(FORWARDED,[Default]), UsedName(INTERNAL_SERVER_ERROR,[Default]), UsedName(CREATED,[Default]), UsedName(ACCESS_CONTROL_ALLOW_HEADERS,[Default]), UsedName(noContent,[Default]), UsedName(redirect,[Default]), UsedName(found,[Default]), UsedName(IF_UNMODIFIED_SINCE,[Default]), UsedName(ACCEPTED,[Default]), UsedName(METHOD_NOT_ALLOWED,[Default]), UsedName(LOCATION,[Default]), UsedName(SERVER,[Default]), UsedName(request,[Default]), UsedName(CONTENT_LENGTH,[Default]), UsedName(X_REQUESTED_WITH,[Default]), UsedName(lang,[Default]), UsedName(ACCEPT,[Default]), UsedName(USER_AGENT,[Default]), UsedName(clearLang,[Default]), UsedName(ACCESS_CONTROL_EXPOSE_HEADERS,[Default]), UsedName(IF_MATCH,[Default]), UsedName(REQUEST_URI_TOO_LONG,[Default]), UsedName(ETAG,[Default]), UsedName(NOT_MODIFIED,[Default]), UsedName(TRAILER,[Default]), UsedName(badRequest,[Default]), UsedName(NON_AUTHORITATIVE_INFORMATION,[Default]), UsedName(WARNING,[Default]), UsedName(COOKIE,[Default]), UsedName(CONTENT_TYPE,[Default]), UsedName(PRECONDITION_FAILED,[Default]), UsedName(IM_A_TEAPOT,[Default]), UsedName(RANGE,[Default]), UsedName(UNPROCESSABLE_ENTITY,[Default]), UsedName(HOST,[Default]), UsedName(session,[Default]), UsedName(SERVICE_UNAVAILABLE,[Default]), UsedName(BAD_GATEWAY,[Default]), UsedName(VIA,[Default]), UsedName(equals,[Default]), UsedName(unauthorized,[Default]), UsedName(RETRY_AFTER,[Default]), UsedName(flash,[Default]), UsedName(REQUESTED_RANGE_NOT_SATISFIABLE,[Default]), UsedName(HTTP_VERSION_NOT_SUPPORTED,[Default]), UsedName(FROM,[Default]), UsedName(OK,[Default]), UsedName(PROXY_AUTHORIZATION,[Default]), UsedName(internalServerError,[Default]), UsedName(notFound,[Default]), UsedName(X_FORWARDED_PORT,[Default]), UsedName(TE,[Default]), UsedName(ctx,[Default]), UsedName(PAYMENT_REQUIRED,[Default]), UsedName(EXPECTATION_FAILED,[Default]), UsedName(created,[Default]), UsedName(NOT_IMPLEMENTED,[Default]), UsedName(movedPermanently,[Default]), UsedName(RESET_CONTENT,[Default]), UsedName(LAST_MODIFIED,[Default]), UsedName(ORIGIN,[Default]), UsedName(ACCESS_CONTROL_ALLOW_CREDENTIALS,[Default]), UsedName(VARY,[Default]), UsedName(BAD_REQUEST,[Default]), UsedName(temporaryRedirect,[Default]), UsedName(X_FORWARDED_PROTO,[Default]), UsedName(ACCESS_CONTROL_REQUEST_HEADERS,[Default]), UsedName(changeLang,[Default]), UsedName(paymentRequired,[Default]), UsedName(X_FORWARDED_FOR,[Default]), UsedName(WWW_AUTHENTICATE,[Default]), UsedName(UPGRADE_REQUIRED,[Default]), UsedName(ACCESS_CONTROL_ALLOW_METHODS,[Default]), UsedName(unsupportedMediaType,[Default]), UsedName(seeOther,[Default]), UsedName(GATEWAY_TIMEOUT,[Default]), UsedName(REQUEST_TIMEOUT,[Default]), UsedName(IF_RANGE,[Default]), UsedName(AUTHORIZATION,[Default]), UsedName(toString,[Default]), UsedName(controllers;AsyncController;init;,[Default]), UsedName(wait,[Default]), UsedName(notAcceptable,[Default]), UsedName(getClass,[Default]), UsedName(FORBIDDEN,[Default]), UsedName(CONTENT_DISPOSITION,[Default]), UsedName(X_FORWARDED_HOST,[Default]), UsedName(UPGRADE,[Default]), UsedName(MAX_FORWARDS,[Default]), UsedName(ACCEPT_ENCODING,[Default]), UsedName(CONTENT_MD5,[Default]), UsedName(NOT_ACCEPTABLE,[Default]), UsedName(EXPECT,[Default]), UsedName(CONFLICT,[Default]), UsedName(message,[Default]), UsedName(LOCKED,[Default]), UsedName(SWITCHING_PROTOCOLS,[Default]), UsedName(ACCESS_CONTROL_ALLOW_ORIGIN,[Default]), UsedName(IF_MODIFIED_SINCE,[Default]), UsedName(USE_PROXY,[Default]), UsedName(CONTENT_ENCODING,[Default]), UsedName(status,[Default]), UsedName(hashCode,[Default]), UsedName(DATE,[Default]), UsedName(NO_CONTENT,[Default]), UsedName(MULTIPLE_CHOICES,[Default]), UsedName(CONTENT_TRANSFER_ENCODING,[Default]), UsedName(UNAUTHORIZED,[Default]), UsedName(REQUEST_ENTITY_TOO_LARGE,[Default]), UsedName(ALLOW,[Default]), UsedName(PROXY_AUTHENTICATION_REQUIRED,[Default]), UsedName(NOT_FOUND,[Default]), UsedName(FOUND,[Default]), UsedName(forbidden,[Default]), UsedName(ACCEPT_LANGUAGE,[Default]), UsedName(IF_NONE_MATCH,[Default]), UsedName(TODO,[Default]), UsedName(SET_COOKIE2,[Default]), UsedName(MOVED_PERMANENTLY,[Default]), UsedName(REFERER,[Default]), UsedName(ACCESS_CONTROL_MAX_AGE,[Default]), UsedName(response,[Default]), UsedName(LENGTH_REQUIRED,[Default]), UsedName(ok,[Default]), UsedName(PERMANENT_REDIRECT,[Default]), UsedName(AsyncController,[Default]), UsedName(FAILED_DEPENDENCY,[Default]), UsedName(UNSUPPORTED_MEDIA_TYPE,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) controllers.AsyncController: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) controllers.AsyncController.[0m
[0m[[0m[0mdebug[0m] [0m[0mName hashing optimization doesn't apply to non-Scala dependency: UnitTest[0m
[0m[[0m[0mdebug[0m] [0m[0mThe models.Tag has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(setId,[Default]), UsedName(findByTexto,[Default]), UsedName(_ebean_getField,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(getTexto,[Default]), UsedName(notify,[Default]), UsedName(numTags,[Default]), UsedName(models;Tag;init;,[Default]), UsedName(getId,[Default]), UsedName(save,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(markAsDirty,[Default]), UsedName(_ebean_props,[Default]), UsedName(setT_receta,[Default]), UsedName(checkAndCreate,[Default]), UsedName(equals,[Default]), UsedName(Tag,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(toJson,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(insert,[Default]), UsedName(find,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(t_receta,[Default]), UsedName(findByReceta,[Default]), UsedName(delete,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(findById,[Default]), UsedName(flush,[Default]), UsedName(getT_receta,[Default]), UsedName(setTexto,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) models.Tag: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) models.Tag.[0m
[0m[[0m[0mdebug[0m] [0m[0mName hashing optimization doesn't apply to non-Scala dependency: FunctionalTest[0m
[0m[[0m[0mdebug[0m] [0m[0mThe views.html.index has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(asInstanceOf,[Default]), UsedName(render,[Default]), UsedName(ref,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(productElement,[Default]), UsedName(productIterator,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(index,[Default]), UsedName(==,[Default]), UsedName(format,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_display_,[Default]), UsedName(productArity,[Default]), UsedName(f,[Default]), UsedName(apply,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) views.html.index: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) views.html.index.[0m
[0m[[0m[0mdebug[0m] [0m[0mName hashing optimization doesn't apply to non-Scala dependency: FunctionalTest[0m
[0m[[0m[0mdebug[0m] [0m[0mThe models.Ingrediente has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(setId,[Default]), UsedName(setNombre,[Default]), UsedName(_ebean_getField,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(setRecetas,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(notify,[Default]), UsedName(getId,[Default]), UsedName(save,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(models;Ingrediente;init;,[Default]), UsedName(markAsDirty,[Default]), UsedName(_ebean_props,[Default]), UsedName(checkAndCreate,[Default]), UsedName(equals,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(findAll,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(toJson,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(numIngredientes,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(recetas,[Default]), UsedName(getNombre,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(findByNombre,[Default]), UsedName(wait,[Default]), UsedName(Ingrediente,[Default]), UsedName(getClass,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(insert,[Default]), UsedName(find,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(delete,[Default]), UsedName(checkAndUpdate,[Default]), UsedName(getRecetas,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(findById,[Default]), UsedName(flush,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) models.Ingrediente: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) models.Ingrediente.[0m
[0m[[0m[0mdebug[0m] [0m[0mName hashing optimization doesn't apply to non-Scala dependency: FunctionalTest[0m
[0m[[0m[0mdebug[0m] [0m[0mThe models.Paso has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(getDescripcion,[Default]), UsedName(setId,[Default]), UsedName(checkAndDelete,[Default]), UsedName(_ebean_getField,[Default]), UsedName(setTiempo,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(notify,[Default]), UsedName(getId,[Default]), UsedName(save,[Default]), UsedName(models;Paso;init;,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(markAsDirty,[Default]), UsedName(_ebean_props,[Default]), UsedName(findByIndice,[Default]), UsedName(checkAndCreate,[Default]), UsedName(equals,[Default]), UsedName(setDescripcion,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(toJson,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(getIndice,[Default]), UsedName(getP_receta,[Default]), UsedName(p_receta,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(getTiempo,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(setIndice,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(insert,[Default]), UsedName(find,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(findByReceta,[Default]), UsedName(delete,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(numPasos,[Default]), UsedName(Paso,[Default]), UsedName(findById,[Default]), UsedName(flush,[Default]), UsedName(setP_receta,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) models.Paso: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) models.Paso.[0m
[0m[[0m[0mdebug[0m] [0m[0mName hashing optimization doesn't apply to non-Scala dependency: FunctionalTest[0m
[0m[[0m[0mdebug[0m] [0m[0mThe controllers.CountController has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(CONTENT_RANGE,[Default]), UsedName(notifyAll,[Default]), UsedName(CONTENT_LOCATION,[Default]), UsedName(CONNECTION,[Default]), UsedName(AGE,[Default]), UsedName(CACHE_CONTROL,[Default]), UsedName(TOO_MANY_REQUESTS,[Default]), UsedName(EXPIRES,[Default]), UsedName(ACCEPT_CHARSET,[Default]), UsedName(SET_COOKIE,[Default]), UsedName(SEE_OTHER,[Default]), UsedName(ACCEPT_RANGES,[Default]), UsedName(PRAGMA,[Default]), UsedName(permanentRedirect,[Default]), UsedName(GONE,[Default]), UsedName(PARTIAL_CONTENT,[Default]), UsedName(CONTENT_LANGUAGE,[Default]), UsedName(MULTI_STATUS,[Default]), UsedName(TRANSFER_ENCODING,[Default]), UsedName(TEMPORARY_REDIRECT,[Default]), UsedName(PROXY_AUTHENTICATE,[Default]), UsedName(notify,[Default]), UsedName(ACCESS_CONTROL_REQUEST_METHOD,[Default]), UsedName(CONTINUE,[Default]), UsedName(INSUFFICIENT_STORAGE,[Default]), UsedName(FORWARDED,[Default]), UsedName(INTERNAL_SERVER_ERROR,[Default]), UsedName(CREATED,[Default]), UsedName(ACCESS_CONTROL_ALLOW_HEADERS,[Default]), UsedName(noContent,[Default]), UsedName(redirect,[Default]), UsedName(found,[Default]), UsedName(IF_UNMODIFIED_SINCE,[Default]), UsedName(ACCEPTED,[Default]), UsedName(METHOD_NOT_ALLOWED,[Default]), UsedName(LOCATION,[Default]), UsedName(SERVER,[Default]), UsedName(request,[Default]), UsedName(CONTENT_LENGTH,[Default]), UsedName(X_REQUESTED_WITH,[Default]), UsedName(lang,[Default]), UsedName(ACCEPT,[Default]), UsedName(USER_AGENT,[Default]), UsedName(clearLang,[Default]), UsedName(ACCESS_CONTROL_EXPOSE_HEADERS,[Default]), UsedName(IF_MATCH,[Default]), UsedName(REQUEST_URI_TOO_LONG,[Default]), UsedName(ETAG,[Default]), UsedName(NOT_MODIFIED,[Default]), UsedName(TRAILER,[Default]), UsedName(badRequest,[Default]), UsedName(NON_AUTHORITATIVE_INFORMATION,[Default]), UsedName(WARNING,[Default]), UsedName(COOKIE,[Default]), UsedName(CONTENT_TYPE,[Default]), UsedName(PRECONDITION_FAILED,[Default]), UsedName(IM_A_TEAPOT,[Default]), UsedName(RANGE,[Default]), UsedName(UNPROCESSABLE_ENTITY,[Default]), UsedName(count,[Default]), UsedName(HOST,[Default]), UsedName(session,[Default]), UsedName(SERVICE_UNAVAILABLE,[Default]), UsedName(BAD_GATEWAY,[Default]), UsedName(VIA,[Default]), UsedName(equals,[Default]), UsedName(unauthorized,[Default]), UsedName(RETRY_AFTER,[Default]), UsedName(flash,[Default]), UsedName(REQUESTED_RANGE_NOT_SATISFIABLE,[Default]), UsedName(HTTP_VERSION_NOT_SUPPORTED,[Default]), UsedName(FROM,[Default]), UsedName(OK,[Default]), UsedName(PROXY_AUTHORIZATION,[Default]), UsedName(internalServerError,[Default]), UsedName(notFound,[Default]), UsedName(X_FORWARDED_PORT,[Default]), UsedName(TE,[Default]), UsedName(ctx,[Default]), UsedName(PAYMENT_REQUIRED,[Default]), UsedName(EXPECTATION_FAILED,[Default]), UsedName(created,[Default]), UsedName(NOT_IMPLEMENTED,[Default]), UsedName(movedPermanently,[Default]), UsedName(RESET_CONTENT,[Default]), UsedName(LAST_MODIFIED,[Default]), UsedName(ORIGIN,[Default]), UsedName(ACCESS_CONTROL_ALLOW_CREDENTIALS,[Default]), UsedName(VARY,[Default]), UsedName(BAD_REQUEST,[Default]), UsedName(temporaryRedirect,[Default]), UsedName(X_FORWARDED_PROTO,[Default]), UsedName(ACCESS_CONTROL_REQUEST_HEADERS,[Default]), UsedName(changeLang,[Default]), UsedName(paymentRequired,[Default]), UsedName(X_FORWARDED_FOR,[Default]), UsedName(WWW_AUTHENTICATE,[Default]), UsedName(UPGRADE_REQUIRED,[Default]), UsedName(ACCESS_CONTROL_ALLOW_METHODS,[Default]), UsedName(unsupportedMediaType,[Default]), UsedName(seeOther,[Default]), UsedName(GATEWAY_TIMEOUT,[Default]), UsedName(REQUEST_TIMEOUT,[Default]), UsedName(IF_RANGE,[Default]), UsedName(AUTHORIZATION,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(CountController,[Default]), UsedName(notAcceptable,[Default]), UsedName(getClass,[Default]), UsedName(FORBIDDEN,[Default]), UsedName(CONTENT_DISPOSITION,[Default]), UsedName(X_FORWARDED_HOST,[Default]), UsedName(UPGRADE,[Default]), UsedName(MAX_FORWARDS,[Default]), UsedName(ACCEPT_ENCODING,[Default]), UsedName(CONTENT_MD5,[Default]), UsedName(NOT_ACCEPTABLE,[Default]), UsedName(EXPECT,[Default]), UsedName(CONFLICT,[Default]), UsedName(LOCKED,[Default]), UsedName(SWITCHING_PROTOCOLS,[Default]), UsedName(ACCESS_CONTROL_ALLOW_ORIGIN,[Default]), UsedName(IF_MODIFIED_SINCE,[Default]), UsedName(USE_PROXY,[Default]), UsedName(CONTENT_ENCODING,[Default]), UsedName(status,[Default]), UsedName(hashCode,[Default]), UsedName(DATE,[Default]), UsedName(NO_CONTENT,[Default]), UsedName(MULTIPLE_CHOICES,[Default]), UsedName(CONTENT_TRANSFER_ENCODING,[Default]), UsedName(UNAUTHORIZED,[Default]), UsedName(controllers;CountController;init;,[Default]), UsedName(REQUEST_ENTITY_TOO_LARGE,[Default]), UsedName(ALLOW,[Default]), UsedName(PROXY_AUTHENTICATION_REQUIRED,[Default]), UsedName(NOT_FOUND,[Default]), UsedName(FOUND,[Default]), UsedName(forbidden,[Default]), UsedName(ACCEPT_LANGUAGE,[Default]), UsedName(IF_NONE_MATCH,[Default]), UsedName(TODO,[Default]), UsedName(SET_COOKIE2,[Default]), UsedName(MOVED_PERMANENTLY,[Default]), UsedName(REFERER,[Default]), UsedName(ACCESS_CONTROL_MAX_AGE,[Default]), UsedName(response,[Default]), UsedName(LENGTH_REQUIRED,[Default]), UsedName(ok,[Default]), UsedName(PERMANENT_REDIRECT,[Default]), UsedName(FAILED_DEPENDENCY,[Default]), UsedName(UNSUPPORTED_MEDIA_TYPE,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) controllers.CountController: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) controllers.CountController.[0m
[0m[[0m[0mdebug[0m] [0m[0mName hashing optimization doesn't apply to non-Scala dependency: UnitTest[0m
[0m[[0m[0mdebug[0m] [0m[0mThe models.Cocinero has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(setKey,[Default]), UsedName(setId,[Default]), UsedName(setNombre,[Default]), UsedName(getKey,[Default]), UsedName(_ebean_getField,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(getTipo,[Default]), UsedName(setRecetas,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(findByKey,[Default]), UsedName(notify,[Default]), UsedName(Cocinero,[Default]), UsedName(getId,[Default]), UsedName(save,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(markAsDirty,[Default]), UsedName(_ebean_props,[Default]), UsedName(numCocineros,[Default]), UsedName(checkAndCreate,[Default]), UsedName(equals,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(findAll,[Default]), UsedName(setTipo,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(toJson,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(key,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(recetas,[Default]), UsedName(getNombre,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(findByNombre,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(insert,[Default]), UsedName(find,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(delete,[Default]), UsedName(setApellido,[Default]), UsedName(getRecetas,[Default]), UsedName(getApellido,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(models;Cocinero;init;,[Default]), UsedName(findById,[Default]), UsedName(flush,[Default]), UsedName(setRestaurante,[Default]), UsedName(getRestaurante,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) models.Cocinero: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) models.Cocinero.[0m
[0m[[0m[0mdebug[0m] [0m[0mName hashing optimization doesn't apply to non-Scala dependency: FunctionalTest[0m
[0m[[0m[0mdebug[0m] [0m[0mThe models.Apikey has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(setKey,[Default]), UsedName(setId,[Default]), UsedName(getKey,[Default]), UsedName(getCocinero,[Default]), UsedName(_ebean_getField,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(notify,[Default]), UsedName(models;Apikey;init;,[Default]), UsedName(getId,[Default]), UsedName(save,[Default]), UsedName(Apikey,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(markAsDirty,[Default]), UsedName(_ebean_props,[Default]), UsedName(equals,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(cocinero,[Default]), UsedName(key,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(insert,[Default]), UsedName(setCocinero,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(delete,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(flush,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) models.Apikey: Set(); now invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) models.Apikey.[0m
[0m[[0m[0mdebug[0m] [0m[0mName hashing optimization doesn't apply to non-Scala dependency: FunctionalTest[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/BrowserTest.java, /Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/UnitTest.java, /Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/FunctionalTest.java)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/target/scala-2.12/test-classes/BrowserTest.class, /Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/target/scala-2.12/test-classes/UnitTest.class, /Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/target/scala-2.12/test-classes/FunctionalTest.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(models.Receta,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(setTitulo,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(setIngredientes,[Default]), UsedName(setId,[Default]), UsedName(_ebean_getField,[Default]), UsedName(getPasos,[Default]), UsedName(findByTituloAndAutor,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(getTipo,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(Receta,[Default]), UsedName(notify,[Default]), UsedName(getId,[Default]), UsedName(findByCocineros,[Default]), UsedName(findByTitulo,[Default]), UsedName(save,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(getIngredientes,[Default]), UsedName(markAsDirty,[Default]), UsedName(setTags,[Default]), UsedName(_ebean_props,[Default]), UsedName(getR_cocinero,[Default]), UsedName(checkAndCreate,[Default]), UsedName(equals,[Default]), UsedName(getTitulo,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(findAll,[Default]), UsedName(setTipo,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(toJson,[Default]), UsedName(setR_cocinero,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(findByTituloAprox,[Default]), UsedName(r_cocinero,[Default]), UsedName(ingredientes,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(findByIngredientes,[Default]), UsedName(pasos,[Default]), UsedName(findByTags,[Default]), UsedName(findByCodineroPaged,[Default]), UsedName(quitarIngrediente,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(findByCocinero,[Default]), UsedName(insert,[Default]), UsedName(setPasos,[Default]), UsedName(tags,[Default]), UsedName(find,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(delete,[Default]), UsedName(numRecetas,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(getTags,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(asignarIngrediente,[Default]), UsedName(findById,[Default]), UsedName(flush,[Default]), UsedName(findByTitulos,[Default]), UsedName(models;Receta;init;,[Default]))), NamesChange(controllers.AsyncController,ModifiedNames(changes = UsedName(CONTENT_RANGE,[Default]), UsedName(notifyAll,[Default]), UsedName(CONTENT_LOCATION,[Default]), UsedName(CONNECTION,[Default]), UsedName(AGE,[Default]), UsedName(CACHE_CONTROL,[Default]), UsedName(TOO_MANY_REQUESTS,[Default]), UsedName(EXPIRES,[Default]), UsedName(ACCEPT_CHARSET,[Default]), UsedName(SET_COOKIE,[Default]), UsedName(SEE_OTHER,[Default]), UsedName(ACCEPT_RANGES,[Default]), UsedName(PRAGMA,[Default]), UsedName(permanentRedirect,[Default]), UsedName(GONE,[Default]), UsedName(PARTIAL_CONTENT,[Default]), UsedName(CONTENT_LANGUAGE,[Default]), UsedName(MULTI_STATUS,[Default]), UsedName(TRANSFER_ENCODING,[Default]), UsedName(TEMPORARY_REDIRECT,[Default]), UsedName(PROXY_AUTHENTICATE,[Default]), UsedName(notify,[Default]), UsedName(ACCESS_CONTROL_REQUEST_METHOD,[Default]), UsedName(CONTINUE,[Default]), UsedName(INSUFFICIENT_STORAGE,[Default]), UsedName(FORWARDED,[Default]), UsedName(INTERNAL_SERVER_ERROR,[Default]), UsedName(CREATED,[Default]), UsedName(ACCESS_CONTROL_ALLOW_HEADERS,[Default]), UsedName(noContent,[Default]), UsedName(redirect,[Default]), UsedName(found,[Default]), UsedName(IF_UNMODIFIED_SINCE,[Default]), UsedName(ACCEPTED,[Default]), UsedName(METHOD_NOT_ALLOWED,[Default]), UsedName(LOCATION,[Default]), UsedName(SERVER,[Default]), UsedName(request,[Default]), UsedName(CONTENT_LENGTH,[Default]), UsedName(X_REQUESTED_WITH,[Default]), UsedName(lang,[Default]), UsedName(ACCEPT,[Default]), UsedName(USER_AGENT,[Default]), UsedName(clearLang,[Default]), UsedName(ACCESS_CONTROL_EXPOSE_HEADERS,[Default]), UsedName(IF_MATCH,[Default]), UsedName(REQUEST_URI_TOO_LONG,[Default]), UsedName(ETAG,[Default]), UsedName(NOT_MODIFIED,[Default]), UsedName(TRAILER,[Default]), UsedName(badRequest,[Default]), UsedName(NON_AUTHORITATIVE_INFORMATION,[Default]), UsedName(WARNING,[Default]), UsedName(COOKIE,[Default]), UsedName(CONTENT_TYPE,[Default]), UsedName(PRECONDITION_FAILED,[Default]), UsedName(IM_A_TEAPOT,[Default]), UsedName(RANGE,[Default]), UsedName(UNPROCESSABLE_ENTITY,[Default]), UsedName(HOST,[Default]), UsedName(session,[Default]), UsedName(SERVICE_UNAVAILABLE,[Default]), UsedName(BAD_GATEWAY,[Default]), UsedName(VIA,[Default]), UsedName(equals,[Default]), UsedName(unauthorized,[Default]), UsedName(RETRY_AFTER,[Default]), UsedName(flash,[Default]), UsedName(REQUESTED_RANGE_NOT_SATISFIABLE,[Default]), UsedName(HTTP_VERSION_NOT_SUPPORTED,[Default]), UsedName(FROM,[Default]), UsedName(OK,[Default]), UsedName(PROXY_AUTHORIZATION,[Default]), UsedName(internalServerError,[Default]), UsedName(notFound,[Default]), UsedName(X_FORWARDED_PORT,[Default]), UsedName(TE,[Default]), UsedName(ctx,[Default]), UsedName(PAYMENT_REQUIRED,[Default]), UsedName(EXPECTATION_FAILED,[Default]), UsedName(created,[Default]), UsedName(NOT_IMPLEMENTED,[Default]), UsedName(movedPermanently,[Default]), UsedName(RESET_CONTENT,[Default]), UsedName(LAST_MODIFIED,[Default]), UsedName(ORIGIN,[Default]), UsedName(ACCESS_CONTROL_ALLOW_CREDENTIALS,[Default]), UsedName(VARY,[Default]), UsedName(BAD_REQUEST,[Default]), UsedName(temporaryRedirect,[Default]), UsedName(X_FORWARDED_PROTO,[Default]), UsedName(ACCESS_CONTROL_REQUEST_HEADERS,[Default]), UsedName(changeLang,[Default]), UsedName(paymentRequired,[Default]), UsedName(X_FORWARDED_FOR,[Default]), UsedName(WWW_AUTHENTICATE,[Default]), UsedName(UPGRADE_REQUIRED,[Default]), UsedName(ACCESS_CONTROL_ALLOW_METHODS,[Default]), UsedName(unsupportedMediaType,[Default]), UsedName(seeOther,[Default]), UsedName(GATEWAY_TIMEOUT,[Default]), UsedName(REQUEST_TIMEOUT,[Default]), UsedName(IF_RANGE,[Default]), UsedName(AUTHORIZATION,[Default]), UsedName(toString,[Default]), UsedName(controllers;AsyncController;init;,[Default]), UsedName(wait,[Default]), UsedName(notAcceptable,[Default]), UsedName(getClass,[Default]), UsedName(FORBIDDEN,[Default]), UsedName(CONTENT_DISPOSITION,[Default]), UsedName(X_FORWARDED_HOST,[Default]), UsedName(UPGRADE,[Default]), UsedName(MAX_FORWARDS,[Default]), UsedName(ACCEPT_ENCODING,[Default]), UsedName(CONTENT_MD5,[Default]), UsedName(NOT_ACCEPTABLE,[Default]), UsedName(EXPECT,[Default]), UsedName(CONFLICT,[Default]), UsedName(message,[Default]), UsedName(LOCKED,[Default]), UsedName(SWITCHING_PROTOCOLS,[Default]), UsedName(ACCESS_CONTROL_ALLOW_ORIGIN,[Default]), UsedName(IF_MODIFIED_SINCE,[Default]), UsedName(USE_PROXY,[Default]), UsedName(CONTENT_ENCODING,[Default]), UsedName(status,[Default]), UsedName(hashCode,[Default]), UsedName(DATE,[Default]), UsedName(NO_CONTENT,[Default]), UsedName(MULTIPLE_CHOICES,[Default]), UsedName(CONTENT_TRANSFER_ENCODING,[Default]), UsedName(UNAUTHORIZED,[Default]), UsedName(REQUEST_ENTITY_TOO_LARGE,[Default]), UsedName(ALLOW,[Default]), UsedName(PROXY_AUTHENTICATION_REQUIRED,[Default]), UsedName(NOT_FOUND,[Default]), UsedName(FOUND,[Default]), UsedName(forbidden,[Default]), UsedName(ACCEPT_LANGUAGE,[Default]), UsedName(IF_NONE_MATCH,[Default]), UsedName(TODO,[Default]), UsedName(SET_COOKIE2,[Default]), UsedName(MOVED_PERMANENTLY,[Default]), UsedName(REFERER,[Default]), UsedName(ACCESS_CONTROL_MAX_AGE,[Default]), UsedName(response,[Default]), UsedName(LENGTH_REQUIRED,[Default]), UsedName(ok,[Default]), UsedName(PERMANENT_REDIRECT,[Default]), UsedName(AsyncController,[Default]), UsedName(FAILED_DEPENDENCY,[Default]), UsedName(UNSUPPORTED_MEDIA_TYPE,[Default]))), NamesChange(models.Tag,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(setId,[Default]), UsedName(findByTexto,[Default]), UsedName(_ebean_getField,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(getTexto,[Default]), UsedName(notify,[Default]), UsedName(numTags,[Default]), UsedName(models;Tag;init;,[Default]), UsedName(getId,[Default]), UsedName(save,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(markAsDirty,[Default]), UsedName(_ebean_props,[Default]), UsedName(setT_receta,[Default]), UsedName(checkAndCreate,[Default]), UsedName(equals,[Default]), UsedName(Tag,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(toJson,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(insert,[Default]), UsedName(find,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(t_receta,[Default]), UsedName(findByReceta,[Default]), UsedName(delete,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(findById,[Default]), UsedName(flush,[Default]), UsedName(getT_receta,[Default]), UsedName(setTexto,[Default]))), NamesChange(views.html.index,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(##,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(asInstanceOf,[Default]), UsedName(render,[Default]), UsedName(ref,[Default]), UsedName(productPrefix,[Default]), UsedName(eq,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(canEqual,[Default]), UsedName(productElement,[Default]), UsedName(productIterator,[Default]), UsedName($isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(ne,[Default]), UsedName(getClass,[Default]), UsedName(index,[Default]), UsedName(==,[Default]), UsedName(format,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(isInstanceOf,[Default]), UsedName(_display_,[Default]), UsedName(productArity,[Default]), UsedName(f,[Default]), UsedName(apply,[Default]))), NamesChange(models.Ingrediente,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(setId,[Default]), UsedName(setNombre,[Default]), UsedName(_ebean_getField,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(setRecetas,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(notify,[Default]), UsedName(getId,[Default]), UsedName(save,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(models;Ingrediente;init;,[Default]), UsedName(markAsDirty,[Default]), UsedName(_ebean_props,[Default]), UsedName(checkAndCreate,[Default]), UsedName(equals,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(findAll,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(toJson,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(numIngredientes,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(recetas,[Default]), UsedName(getNombre,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(findByNombre,[Default]), UsedName(wait,[Default]), UsedName(Ingrediente,[Default]), UsedName(getClass,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(insert,[Default]), UsedName(find,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(delete,[Default]), UsedName(checkAndUpdate,[Default]), UsedName(getRecetas,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(findById,[Default]), UsedName(flush,[Default]))), NamesChange(models.Paso,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(getDescripcion,[Default]), UsedName(setId,[Default]), UsedName(checkAndDelete,[Default]), UsedName(_ebean_getField,[Default]), UsedName(setTiempo,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(notify,[Default]), UsedName(getId,[Default]), UsedName(save,[Default]), UsedName(models;Paso;init;,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(markAsDirty,[Default]), UsedName(_ebean_props,[Default]), UsedName(findByIndice,[Default]), UsedName(checkAndCreate,[Default]), UsedName(equals,[Default]), UsedName(setDescripcion,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(toJson,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(getIndice,[Default]), UsedName(getP_receta,[Default]), UsedName(p_receta,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(getTiempo,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(setIndice,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(insert,[Default]), UsedName(find,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(findByReceta,[Default]), UsedName(delete,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(numPasos,[Default]), UsedName(Paso,[Default]), UsedName(findById,[Default]), UsedName(flush,[Default]), UsedName(setP_receta,[Default]))), NamesChange(controllers.CountController,ModifiedNames(changes = UsedName(CONTENT_RANGE,[Default]), UsedName(notifyAll,[Default]), UsedName(CONTENT_LOCATION,[Default]), UsedName(CONNECTION,[Default]), UsedName(AGE,[Default]), UsedName(CACHE_CONTROL,[Default]), UsedName(TOO_MANY_REQUESTS,[Default]), UsedName(EXPIRES,[Default]), UsedName(ACCEPT_CHARSET,[Default]), UsedName(SET_COOKIE,[Default]), UsedName(SEE_OTHER,[Default]), UsedName(ACCEPT_RANGES,[Default]), UsedName(PRAGMA,[Default]), UsedName(permanentRedirect,[Default]), UsedName(GONE,[Default]), UsedName(PARTIAL_CONTENT,[Default]), UsedName(CONTENT_LANGUAGE,[Default]), UsedName(MULTI_STATUS,[Default]), UsedName(TRANSFER_ENCODING,[Default]), UsedName(TEMPORARY_REDIRECT,[Default]), UsedName(PROXY_AUTHENTICATE,[Default]), UsedName(notify,[Default]), UsedName(ACCESS_CONTROL_REQUEST_METHOD,[Default]), UsedName(CONTINUE,[Default]), UsedName(INSUFFICIENT_STORAGE,[Default]), UsedName(FORWARDED,[Default]), UsedName(INTERNAL_SERVER_ERROR,[Default]), UsedName(CREATED,[Default]), UsedName(ACCESS_CONTROL_ALLOW_HEADERS,[Default]), UsedName(noContent,[Default]), UsedName(redirect,[Default]), UsedName(found,[Default]), UsedName(IF_UNMODIFIED_SINCE,[Default]), UsedName(ACCEPTED,[Default]), UsedName(METHOD_NOT_ALLOWED,[Default]), UsedName(LOCATION,[Default]), UsedName(SERVER,[Default]), UsedName(request,[Default]), UsedName(CONTENT_LENGTH,[Default]), UsedName(X_REQUESTED_WITH,[Default]), UsedName(lang,[Default]), UsedName(ACCEPT,[Default]), UsedName(USER_AGENT,[Default]), UsedName(clearLang,[Default]), UsedName(ACCESS_CONTROL_EXPOSE_HEADERS,[Default]), UsedName(IF_MATCH,[Default]), UsedName(REQUEST_URI_TOO_LONG,[Default]), UsedName(ETAG,[Default]), UsedName(NOT_MODIFIED,[Default]), UsedName(TRAILER,[Default]), UsedName(badRequest,[Default]), UsedName(NON_AUTHORITATIVE_INFORMATION,[Default]), UsedName(WARNING,[Default]), UsedName(COOKIE,[Default]), UsedName(CONTENT_TYPE,[Default]), UsedName(PRECONDITION_FAILED,[Default]), UsedName(IM_A_TEAPOT,[Default]), UsedName(RANGE,[Default]), UsedName(UNPROCESSABLE_ENTITY,[Default]), UsedName(count,[Default]), UsedName(HOST,[Default]), UsedName(session,[Default]), UsedName(SERVICE_UNAVAILABLE,[Default]), UsedName(BAD_GATEWAY,[Default]), UsedName(VIA,[Default]), UsedName(equals,[Default]), UsedName(unauthorized,[Default]), UsedName(RETRY_AFTER,[Default]), UsedName(flash,[Default]), UsedName(REQUESTED_RANGE_NOT_SATISFIABLE,[Default]), UsedName(HTTP_VERSION_NOT_SUPPORTED,[Default]), UsedName(FROM,[Default]), UsedName(OK,[Default]), UsedName(PROXY_AUTHORIZATION,[Default]), UsedName(internalServerError,[Default]), UsedName(notFound,[Default]), UsedName(X_FORWARDED_PORT,[Default]), UsedName(TE,[Default]), UsedName(ctx,[Default]), UsedName(PAYMENT_REQUIRED,[Default]), UsedName(EXPECTATION_FAILED,[Default]), UsedName(created,[Default]), UsedName(NOT_IMPLEMENTED,[Default]), UsedName(movedPermanently,[Default]), UsedName(RESET_CONTENT,[Default]), UsedName(LAST_MODIFIED,[Default]), UsedName(ORIGIN,[Default]), UsedName(ACCESS_CONTROL_ALLOW_CREDENTIALS,[Default]), UsedName(VARY,[Default]), UsedName(BAD_REQUEST,[Default]), UsedName(temporaryRedirect,[Default]), UsedName(X_FORWARDED_PROTO,[Default]), UsedName(ACCESS_CONTROL_REQUEST_HEADERS,[Default]), UsedName(changeLang,[Default]), UsedName(paymentRequired,[Default]), UsedName(X_FORWARDED_FOR,[Default]), UsedName(WWW_AUTHENTICATE,[Default]), UsedName(UPGRADE_REQUIRED,[Default]), UsedName(ACCESS_CONTROL_ALLOW_METHODS,[Default]), UsedName(unsupportedMediaType,[Default]), UsedName(seeOther,[Default]), UsedName(GATEWAY_TIMEOUT,[Default]), UsedName(REQUEST_TIMEOUT,[Default]), UsedName(IF_RANGE,[Default]), UsedName(AUTHORIZATION,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(CountController,[Default]), UsedName(notAcceptable,[Default]), UsedName(getClass,[Default]), UsedName(FORBIDDEN,[Default]), UsedName(CONTENT_DISPOSITION,[Default]), UsedName(X_FORWARDED_HOST,[Default]), UsedName(UPGRADE,[Default]), UsedName(MAX_FORWARDS,[Default]), UsedName(ACCEPT_ENCODING,[Default]), UsedName(CONTENT_MD5,[Default]), UsedName(NOT_ACCEPTABLE,[Default]), UsedName(EXPECT,[Default]), UsedName(CONFLICT,[Default]), UsedName(LOCKED,[Default]), UsedName(SWITCHING_PROTOCOLS,[Default]), UsedName(ACCESS_CONTROL_ALLOW_ORIGIN,[Default]), UsedName(IF_MODIFIED_SINCE,[Default]), UsedName(USE_PROXY,[Default]), UsedName(CONTENT_ENCODING,[Default]), UsedName(status,[Default]), UsedName(hashCode,[Default]), UsedName(DATE,[Default]), UsedName(NO_CONTENT,[Default]), UsedName(MULTIPLE_CHOICES,[Default]), UsedName(CONTENT_TRANSFER_ENCODING,[Default]), UsedName(UNAUTHORIZED,[Default]), UsedName(controllers;CountController;init;,[Default]), UsedName(REQUEST_ENTITY_TOO_LARGE,[Default]), UsedName(ALLOW,[Default]), UsedName(PROXY_AUTHENTICATION_REQUIRED,[Default]), UsedName(NOT_FOUND,[Default]), UsedName(FOUND,[Default]), UsedName(forbidden,[Default]), UsedName(ACCEPT_LANGUAGE,[Default]), UsedName(IF_NONE_MATCH,[Default]), UsedName(TODO,[Default]), UsedName(SET_COOKIE2,[Default]), UsedName(MOVED_PERMANENTLY,[Default]), UsedName(REFERER,[Default]), UsedName(ACCESS_CONTROL_MAX_AGE,[Default]), UsedName(response,[Default]), UsedName(LENGTH_REQUIRED,[Default]), UsedName(ok,[Default]), UsedName(PERMANENT_REDIRECT,[Default]), UsedName(FAILED_DEPENDENCY,[Default]), UsedName(UNSUPPORTED_MEDIA_TYPE,[Default]))), NamesChange(models.Cocinero,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(setKey,[Default]), UsedName(setId,[Default]), UsedName(setNombre,[Default]), UsedName(getKey,[Default]), UsedName(_ebean_getField,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(getTipo,[Default]), UsedName(setRecetas,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(findByKey,[Default]), UsedName(notify,[Default]), UsedName(Cocinero,[Default]), UsedName(getId,[Default]), UsedName(save,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(markAsDirty,[Default]), UsedName(_ebean_props,[Default]), UsedName(numCocineros,[Default]), UsedName(checkAndCreate,[Default]), UsedName(equals,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(findAll,[Default]), UsedName(setTipo,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(toJson,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(key,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(recetas,[Default]), UsedName(getNombre,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(findByNombre,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(insert,[Default]), UsedName(find,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(delete,[Default]), UsedName(setApellido,[Default]), UsedName(getRecetas,[Default]), UsedName(getApellido,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(models;Cocinero;init;,[Default]), UsedName(findById,[Default]), UsedName(flush,[Default]), UsedName(setRestaurante,[Default]), UsedName(getRestaurante,[Default]))), NamesChange(models.Apikey,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(update,[Default]), UsedName(_ebean_getPropertyName,[Default]), UsedName(getFechaCreacion,[Default]), UsedName(setKey,[Default]), UsedName(setId,[Default]), UsedName(getKey,[Default]), UsedName(getCocinero,[Default]), UsedName(_ebean_getField,[Default]), UsedName(_ebean_getIntercept,[Default]), UsedName(refresh,[Default]), UsedName(_ebean_intercept,[Default]), UsedName(notify,[Default]), UsedName(models;Apikey;init;,[Default]), UsedName(getId,[Default]), UsedName(save,[Default]), UsedName(Apikey,[Default]), UsedName(_ebean_setField,[Default]), UsedName(deletePermanent,[Default]), UsedName(markAsDirty,[Default]), UsedName(_ebean_props,[Default]), UsedName(equals,[Default]), UsedName(_ebean_isEmbeddedNewOrDirty,[Default]), UsedName(removePropertyChangeListener,[Default]), UsedName(_ebean_getPropertyNames,[Default]), UsedName(cocinero,[Default]), UsedName(key,[Default]), UsedName(_ebean_setEmbeddedLoaded,[Default]), UsedName(markPropertyUnset,[Default]), UsedName(_ebean_setFieldIntercept,[Default]), UsedName(id,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(_ebean_getMarker,[Default]), UsedName(db,[Default]), UsedName(_ebean_newInstance,[Default]), UsedName(insert,[Default]), UsedName(setCocinero,[Default]), UsedName(_ebean_getFieldIntercept,[Default]), UsedName(delete,[Default]), UsedName(hashCode,[Default]), UsedName(getFechaModificacion,[Default]), UsedName(getVersion,[Default]), UsedName(addPropertyChangeListener,[Default]), UsedName(flush,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set(/Users/mimo/.ivy2/cache/org.awaitility/awaitility/jars/awaitility-2.0.0.jar, /Users/mimo/.ivy2/cache/com.typesafe.play/play-test_2.12/jars/play-test_2.12-2.6.7.jar, /Users/mimo/.ivy2/cache/com.typesafe.play/twirl-api_2.12/jars/twirl-api_2.12-1.3.12.jar, /Users/mimo/.ivy2/cache/com.typesafe.play/play_2.12/jars/play_2.12-2.6.7.jar, /Users/mimo/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.6.jar, /Users/mimo/.ivy2/cache/org.assertj/assertj-core/bundles/assertj-core-3.6.2.jar, /Users/mimo/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.8.10.jar)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(BrowserTest, UnitTest, FunctionalTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/BrowserTest.java, /Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/UnitTest.java, /Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/FunctionalTest.java)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set(/Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/BrowserTest.java, /Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/FunctionalTest.java, /Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/UnitTest.java)[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(FunctionalTest, UnitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(BrowserTest, UnitTest, FunctionalTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/BrowserTest.java, /Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/UnitTest.java, /Users/mimo/_MASTER MIMO/_proyectos/2 CLOUD/play/apiRecetas/test/FunctionalTest.java)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 0 sources: invalidated sources (3) exceeded 50.0% of all sources[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from BrowserTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(BrowserTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(BrowserTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(BrowserTest,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(quitBrowser,[Default]), UsedName(stopServer,[Default]), UsedName(notify,[Default]), UsedName(provideBrowser,[Default]), UsedName(equals,[Default]), UsedName(provideApplication,[Default]), UsedName(BrowserTest,[Default]), UsedName(BrowserTest;init;,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(startServer,[Default]), UsedName(createBrowser,[Default]))) invalidates 1 classes due to The BrowserTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(quitBrowser,[Default]), UsedName(stopServer,[Default]), UsedName(notify,[Default]), UsedName(provideBrowser,[Default]), UsedName(equals,[Default]), UsedName(provideApplication,[Default]), UsedName(BrowserTest,[Default]), UsedName(BrowserTest;init;,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]), UsedName(startServer,[Default]), UsedName(createBrowser,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(BrowserTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from UnitTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(UnitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(UnitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(UnitTest,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName(simpleCheck,[Default]), UsedName(notify,[Default]), UsedName(testAsync,[Default]), UsedName(UnitTest,[Default]), UsedName(testCount,[Default]), UsedName(equals,[Default]), UsedName(UnitTest;init;,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]))) invalidates 1 classes due to The UnitTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notifyAll,[Default]), UsedName(simpleCheck,[Default]), UsedName(notify,[Default]), UsedName(testAsync,[Default]), UsedName(UnitTest,[Default]), UsedName(testCount,[Default]), UsedName(equals,[Default]), UsedName(UnitTest;init;,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(hashCode,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(UnitTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from FunctionalTest...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(FunctionalTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(FunctionalTest)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(FunctionalTest,ModifiedNames(changes = UsedName(testPasoPost,[Default]), UsedName(notifyAll,[Default]), UsedName(testPasoPut,[Default]), UsedName(testPasosGet,[Default]), UsedName(stopPlay,[Default]), UsedName(testCocinerosGet,[Default]), UsedName(notify,[Default]), UsedName(testAnadirIngrediente,[Default]), UsedName(testTagGet,[Default]), UsedName(preparacionDatos,[Default]), UsedName(testTagPut,[Default]), UsedName(testCocineroPut,[Default]), UsedName(testCocineroGet,[Default]), UsedName(testPasoGet,[Default]), UsedName(FunctionalTest,[Default]), UsedName(equals,[Default]), UsedName(testRecetaPut,[Default]), UsedName(borradoDatos,[Default]), UsedName(testSeguridadPermisoCocineroApi,[Default]), UsedName(testRecetaGet,[Default]), UsedName(testCocineroDelete,[Default]), UsedName(testQuitarIngrediente,[Default]), UsedName(renderTemplate,[Default]), UsedName(testRecetaDelete,[Default]), UsedName(testRecetasGet,[Default]), UsedName(toString,[Default]), UsedName(testCocineroPost,[Default]), UsedName(testIngredienteDelete,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(testTagsGet,[Default]), UsedName(testPasoDelete,[Default]), UsedName(testTagDelete,[Default]), UsedName(testIngredientesGet,[Default]), UsedName(startPlay,[Default]), UsedName(testTagPost,[Default]), UsedName(hashCode,[Default]), UsedName(testIngredientePost,[Default]), UsedName(FunctionalTest;init;,[Default]), UsedName(testSeguridadEsCocineroApi,[Default]), UsedName(testSeguridadNoApiKey,[Default]), UsedName(testRecetaPost,[Default]), UsedName(testIngredientePut,[Default]))) invalidates 1 classes due to The FunctionalTest has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(testPasoPost,[Default]), UsedName(notifyAll,[Default]), UsedName(testPasoPut,[Default]), UsedName(testPasosGet,[Default]), UsedName(stopPlay,[Default]), UsedName(testCocinerosGet,[Default]), UsedName(notify,[Default]), UsedName(testAnadirIngrediente,[Default]), UsedName(testTagGet,[Default]), UsedName(preparacionDatos,[Default]), UsedName(testTagPut,[Default]), UsedName(testCocineroPut,[Default]), UsedName(testCocineroGet,[Default]), UsedName(testPasoGet,[Default]), UsedName(FunctionalTest,[Default]), UsedName(equals,[Default]), UsedName(testRecetaPut,[Default]), UsedName(borradoDatos,[Default]), UsedName(testSeguridadPermisoCocineroApi,[Default]), UsedName(testRecetaGet,[Default]), UsedName(testCocineroDelete,[Default]), UsedName(testQuitarIngrediente,[Default]), UsedName(renderTemplate,[Default]), UsedName(testRecetaDelete,[Default]), UsedName(testRecetasGet,[Default]), UsedName(toString,[Default]), UsedName(testCocineroPost,[Default]), UsedName(testIngredienteDelete,[Default]), UsedName(wait,[Default]), UsedName(getClass,[Default]), UsedName(testTagsGet,[Default]), UsedName(testPasoDelete,[Default]), UsedName(testTagDelete,[Default]), UsedName(testIngredientesGet,[Default]), UsedName(startPlay,[Default]), UsedName(testTagPost,[Default]), UsedName(hashCode,[Default]), UsedName(testIngredientePost,[Default]), UsedName(FunctionalTest;init;,[Default]), UsedName(testSeguridadEsCocineroApi,[Default]), UsedName(testSeguridadNoApiKey,[Default]), UsedName(testRecetaPost,[Default]), UsedName(testIngredientePut,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(FunctionalTest)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
